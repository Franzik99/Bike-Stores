-- List all products with their respective brands and categories.
SELECT product_id, brands.brand_id, categories.category_id, brands.brand_name, categories.category_name
FROM products
JOIN brands  ON brands.brand_id = products.brand_id
JOIN categories ON categories.category_id = products.category_id;
 
--Retrieve the total number of orders placed by each customer.
SELECT customers.customer_id, concat(customers.first_name, ' ', customers.last_name) AS FullName, COUNT(orders.order_id) AS TotalNum_of_Orders
FROM customers
JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY customers.customer_id, customers.first_name, customers.last_name
ORDER By TotalNum_of_Orders DESC;

--Identify the top 5 Most Costly products.
SELECT top 5 order_items.product_id, products.product_name, (quantity * order_items.list_price) - (quantity * order_items.list_price)* discount AS TotalCost 
FROM order_items
JOIN products ON products.product_id = order_items.product_id
ORDER BY TotalCost DESC;

--Identify the top 5 best-selling products.
SELECT top 5 order_items.product_id, products.product_name, Sum(quantity) AS TotalQuantity 
FROM order_items
JOIN products ON products.product_id = order_items.product_id
GROUP BY order_items.product_id, products.product_name
ORDER BY TotalQuantity DESC;

--Calculate the total revenue generated by each store.
SELECT orders.store_id, SUM(order_items.quantity * order_items.list_price) AS TotalRevenu, stores.store_name
 FROM orders
 JOIN order_items ON orders.order_id = order_items.order_id
 JOIN stores ON stores.store_id = orders.store_id
 Group BY stores.store_name, order_items.list_price, orders.order_id, orders.store_id
 ORDER BY TotalRevenu DESC;

 --List the products that are out of stock.
 SELECT products.product_id, product_name, stocks.quantity 
 FROM products
JOIN stocks ON products.product_id = stocks.product_id
 WHERE stocks.quantity = 0;

 --Identify the staff members who have processed the highest number of orders.
 SELECT orders.staff_id, CONCAT(staffs.first_name, ' ', staffs.last_name) AS FullName, COUNT(orders.order_id) AS Num_of_Orderprocessed 
  FROM orders
  JOIN staffs ON staffs.staff_id = orders.staff_id
 GROUP BY orders.order_status, orders.staff_id, staffs.first_name,staffs.last_name
 Order By Num_of_Orderprocessed DESC;
 SELECT orders.staff_id, CONCAT(staffs.first_name,' ', staffs.last_name) AS Full_Name,  COUNT(orders.order_id) AS Num_of_orderProcesssed
 FROM orders
 JOIN staffs ON staffs.staff_id = orders.staff_id
 GROUP BY orders.staff_id,  staffs.first_name, staffs.last_name
 ORDER BY Num_of_orderProcesssed DESC;

 --Determine the average order value per customer.
SELECT orders.customer_id, CONCAT(customers.first_name, ' ', customers.last_name) AS CustomerFullName, AVG(order_items.quantity * order_items.list_price) AS AVGValues
 FROM orders
 JOIN customers ON orders.customer_id = customers.customer_id
 JOIN order_items ON orders.order_id = order_items.order_id
 Group BY orders.customer_id,customers.first_name, customers.last_name
 ORDER BY AVGValues DESC;
